{"version":3,"sources":["img/icono_avion_izq.svg","img/icono_avion_der.svg","serviceWorker.js","Flights.js","Map.js","Chat.js","App.js","index.js"],"names":["module","exports","Boolean","window","location","hostname","match","Flights","props","todos_vuelos","this","vuelos","map","elem","index","id","class","airline","code","plane","origin","destination","seats","type","data-toggle","passengers","c_pas","age","name","onClick","SubmitVuelos","React","Component","icon_der","Icon","iconUrl","iconos_aviones_izq","iconSize","iconos_aviones_der","Mapa","posiciones","limeOptions","color","Map","center","zoom","TileLayer","url","attribution","c_vuelo","Polyline","pathOptions","positions","c_pos","Marker","icon","position","Tooltip","socket","require","connect","path","Chat","mySubmitHandler","event","preventDefault","mensaje","state","message","emit","chats","handleChange","bind","on","data","setState","target","value","mensajes","key","moment","Date","date","format","onSubmit","placeholder","onChange","App","pos_aux","pos_aux_2","encontrado","length","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.8ef4ceea.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/icono_avion_izq.bfa8bb3b.svg\";","module.exports = __webpack_public_path__ + \"static/media/icono_avion_der.66aba7c0.svg\";","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport { Map, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport { Icon } from \"leaflet\";\n//import Mapa from \"./App.js\";\nimport \"./App.css\";\n\nexport default class Flights extends React.Component {\n\n  constructor(props) {\n    super(props);\n  }\n\n  render() {\n    const todos_vuelos = this.props.vuelos.map((elem, index) => {\n      return <div id=\"carta-vuelo\" class=\"card text-dark bg-light mb-3\">\n                  <div class=\"card-header\">{elem.airline}</div>\n                  <div class=\"card-body\">\n                    <h5 class=\"card-title\">{elem.code}</h5>\n                    <span>Avión: {elem.plane}</span>\n                    <br></br>\n                    <span>Origen: {elem.origin[0]} | {elem.origin[1]}</span>\n                    <br></br>\n                    <span>Destino: {elem.destination[0]} | {elem.destination[1]}</span>\n                    <br></br>\n                    <span>Asientos: {elem.seats}</span>\n                    <br></br>\n                    <div class=\"dropup\">\n                      <button type=\"button\" class=\"btn btn-outline-secondary dropdown-toggle\" data-toggle=\"dropdown\">\n                        Pasajeros\n                      </button>\n                      <div class=\"dropdown-menu\">\n                        {elem.passengers.map(c_pas=>\n                          <a class=\"dropdown-item\">({c_pas.age}) {c_pas.name}</a>\n                        )}\n                      </div>\n                    </div>\n                  </div>\n             </div>\n    });\n\n\n    return (\n      <div>\n        <div id=\"cont-boton-vuelos\" class=\"d-grid gap-2\">\n          <button class=\"btn btn-outline-secondary\" type=\"button\"\n            onClick={this.props.SubmitVuelos}\n          >Cargar Vuelos</button>\n        </div>\n        <div id=\"cont-tarjetas-vuelos\">\n          {todos_vuelos}\n        </div>\n      </div>\n    );\n  }\n\n}\n\n","import React from \"react\";\nimport { Map, Marker, Popup, TileLayer, Polyline, Tooltip } from \"react-leaflet\";\nimport { Icon } from \"leaflet\";\nimport \"./App.css\";\nimport L from 'leaflet';\nimport iconos_aviones_izq from './img/icono_avion_izq.svg';\nimport iconos_aviones_der from './img/icono_avion_der.svg';\n\n\nexport const icon_izq = new Icon({\n  iconUrl: iconos_aviones_izq,\n  iconSize: [40, 40]\n});\n\nexport const icon_der = new Icon({\n  iconUrl: iconos_aviones_der,\n  iconSize: [40, 40]\n});\n\nexport default function Mapa({vuelos, posiciones}) {\n\n  const limeOptions = { color: 'red' };\n\n  \n  return (\n    <div>\n      <Map center={[30, 0]} zoom={1}>\n        <TileLayer\n          url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\n          attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\n        />\n      \n        {vuelos.map((c_vuelo) => (\n            <Polyline pathOptions={limeOptions} positions={[\n                [c_vuelo.origin[0], c_vuelo.origin[1]],\n                [c_vuelo.destination[0], c_vuelo.destination[1]],\n              ]} />\n        ))}\n\n        {posiciones.map((c_pos) => (\n            <Marker icon={icon_der} position={c_pos.position}>\n              <Tooltip><b>{c_pos.code}</b><br></br>\n              <span>Latitud:</span><br></br>{c_pos.position[0]}<br></br>\n              <span>Longitud:</span><br></br>{c_pos.position[1]}</Tooltip>\n            </Marker>\n        ))}\n\n      </Map>\n    </div>\n  );\n}\n\n","import React from \"react\";\nimport { Map, Marker, Popup, TileLayer } from \"react-leaflet\";\nimport { Icon } from \"leaflet\";\nimport \"./App.css\";\nimport moment from 'moment';\n\nvar io = require(\"socket.io-client\");\n\nvar socket = io.connect('wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl', {\n    path:'/flights'\n}); \n\n\n\nexport default class Chat extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      chats: [],\n      name: \"\",\n      message: \"\"\n    };\n    this.handleChange = this.handleChange.bind(this);\n    this.mySubmitHandler = this.mySubmitHandler.bind(this)\n    \n  }\n\n  componentDidMount () {\n    socket.on('CHAT', data => {\n      //var mensaje = {\n      //  name: data.name,\n      //  date: moment(new Date(data.date)).format('DD-MM-YYYY'),\n      //  message: data.message\n      //}\n      this.setState({ chats: [...this.state.chats, data]})\n      //console.log(this.state.chats)\n    })\n  }\n\n  mySubmitHandler = (event) => {\n    event.preventDefault();\n    var mensaje = { \n      name: this.state.name,\n      message: this.state.message\n    };\n    //console.log(mensaje);\n    socket.emit('CHAT', mensaje);\n    this.state.name = '';\n    this.state.message = '';\n  }\n\n  handleChange(event){\n    this.setState({\n      [event.target.name] : event.target.value\n    })\n  }\n\n  render() {\n    const mensajes = this.state.chats.map((mensaje, index) => {\n      return <div key={index} id=\"cont-mensaje\" class=\"card text-dark bg-light mb-3\">\n        <div id=\"cont-nombre-chat\" class=\"card-header\">{mensaje.name}</div>\n        <span>{mensaje.message}</span>\n        <span id=\"fecha-chat\">{moment(new Date(mensaje.date)).format('DD-MM-YYYY')}</span>\n      </div>\n    });\n\n    return (\n      <div>\n        <div id=\"cont-mensajes\">\n          {mensajes}\n        </div>\n        <div id=\"cont-accion-chat\">\n        <form onSubmit={this.mySubmitHandler}>\n          <input\n            class=\"form-control me-2\"\n            type='text'\n            name='name'\n            placeholder = \"Nombre...\"\n            value = {this.state.name}\n            onChange={this.handleChange}\n            //onChange={(e) => this.setState({name: e.target.value})}\n          />\n          <input\n            class=\"form-control me-2\"\n            type='text'\n            name='message'\n            placeholder = \"Chat...\"\n            value = {this.state.message}\n            onChange={this.handleChange}\n            //onChange={(e) => this.setState({message: e.target.value})}\n          />\n          <div class=\"d-grid gap-2\">\n            <button class=\"btn btn-outline-secondary\" type=\"submit\">Enviar</button>\n          </div>\n        </form>\n        </div>\n      </div>\n    );\n  }\n\n}\n\n","import React from \"react\";\nimport { Map, Marker, Popup, TileLayer, Polyline } from \"react-leaflet\";\nimport { Icon } from \"leaflet\";\nimport \"./App.css\";\nimport Flights from \"./Flights\";\nimport Mapa from \"./Map\";\nimport Chat from \"./Chat\";\n\n//import L from 'leaflet';\n\nvar io = require(\"socket.io-client\");\n\nvar socket = io.connect('wss://tarea-3-websocket.2021-1.tallerdeintegracion.cl', {\n    path:'/flights'\n}); \n\n\n//socket.on('CHAT', function(data){\n  //console.log(data);\n  //var todos_vuelos = JSON.parse(sessionStorage.getItem(\"todos_vuelos\"));\n  //console.log(todos_vuelos[0].origin[0]);\n  //render(data)\n//});\n\nexport default class App extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      vuelos: [],\n      chats: [],\n      posiciones: [],\n    };\n    \n  }\n\n  componentDidMount () {\n    socket.on('POSITION', data => {\n      var pos_aux = this.state.posiciones;\n      var pos_aux_2 = this.state.posiciones;\n      var encontrado = 0;\n      if (pos_aux.length === 0){\n        pos_aux_2 = [data]\n      } else {\n        pos_aux.map((c_pos, index) => {\n          if (c_pos.code === data.code){\n            pos_aux_2[index] = data\n            encontrado = 1;\n          } \n        });\n        if (encontrado === 0) {\n          pos_aux_2 = [...pos_aux_2, data]\n        } \n      }\n      this.setState({ posiciones: pos_aux_2})\n           \n         \n    })\n  }\n\n  mySubmitHandler = (event) => {\n    event.preventDefault();\n    socket.emit('FLIGHTS', \"\");\n    socket.on('FLIGHTS', data => {\n      this.setState({ vuelos: data})\n    })\n    //console.log(this.state.vuelos)\n    //mandar vuelos a App\n    //var todos_vuelos = this.state.vuelos;\n    //sessionStorage.setItem(\"todos_vuelos\", JSON.stringify(todos_vuelos));    \n  }\n\n\n  render() {\n      return (\n        <div>\n              <div id=\"cont-vuelos\">\n                <Flights\n                  vuelos={this.state.vuelos}\n                  SubmitVuelos={this.mySubmitHandler}\n                />\n              </div>\n              <div id=\"cont-mapa\">\n                <Mapa\n                  vuelos={this.state.vuelos}\n                  posiciones={this.state.posiciones}\n                />\n              </div>\n              <div id=\"cont-chat\">\n                <Chat\n                  //schats={this.state.chats}            \n                />\n            </div> \n        </div>\n    );\n  }\n\n}\n\n//Tutorial base para levantar la App >> https://github.com/leighhalliday/react-leaflet-demo/blob/master/src/App.js\n\n\n\n\n\n\n\n\n\n\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\n//import {Mapa, Flights} from './App';\n//import Mapa from './App'\n//import Chat from './Chat';\n//import Flights from './Flights';\nimport * as serviceWorker from './serviceWorker';\n//import { El_mapa } from './El_mapa';\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n//ReactDOM.render(<Mapa />, document.getElementById('mapa'));\n//ReactDOM.render(<Chat />, document.getElementById('chat'));\n//ReactDOM.render(<Flights />, document.getElementById('vuelos'));\n//ReactDOM.render(<Flights />, document.getElementById('vuelos'));\n//ReactDOM.render(<El_mapa />, document.getElementById('mapa'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}